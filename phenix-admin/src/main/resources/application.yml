server:
  port: 6110
  max-http-header-size: 10240000
  tomcat:
    max-http-post-size: 10240000
    max-connections: 3000
    max-threads: 1000
spring:
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  datasource:
    name: hikariDataSource
    type: com.zaxxer.hikari.HikariDataSource
    driver-class-name: com.mysql.cj.jdbc.Driver
    jdbc-url: jdbc:mysql://localhost:3306/${phenix.database}?serverTimezone=GMT%2B8&useUnicode=true&characterEncoding=utf8&useSSL=false
    username: 3cc129f24c1c931b4f17d6500e15053a
    password: 3cc129f24c1c931b4f17d6500e15053a
  redis:
    database: 0 # Redis数据库索引（默认为0）
    host: 127.0.0.1 # Redis服务器地址
    port: 6379  # Redis服务器连接端口
    password: phenix # Redis服务器连接密码（默认为空）
    lettuce:
      pool:
        max-active: 32
        max-wait: 300
        max-idle: 16
        min-idle: 8
  security:
    user:
      name: "phenix"
      password: "phenix"
  basic:
    enabled: false
  cache:
    type: redis
  jackson:
    default-property-inclusion: ALWAYS
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  mvc:
    static-path-pattern: /**
  thymeleaf:
    mode: HTML
    cache: false
    servlet:
      content-type: text/html
      encoding: UTF-8
    prefix: classpath:/static/pages/
security:
  basic:
    enabled: false

mybatis-plus:
  # xml
  mapper-locations: classpath*:mapper/*.xml
  global-config:
    #刷新mapper 调试神器
    db-config:
      #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
      id-type: id_worker  #id_worker
      #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
      field-strategy: not_empty
      #驼峰下划线转换
      #column-underline: true
      #数据库大写下划线转换
      #capital-mode: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
      db-type: mysql
    refresh: true
      #自定义填充策略接口实现
      #meta-object-handler: com.baomidou.springboot.xxx
      #自定义SQL注入器
    #sql-injector: com.baomidou.mybatisplus.extension.injector.LogicSqlInjector
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false
    log-impl: # org.apache.ibatis.logging.stdout.StdOutImpl
management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS
endpoints:
  health:
    sensitive: true
  cors:
    allowed-methods: HEAD,GET,PUT,DELETE,POST
  shutdown:
    enabled: true
    sensitive: false
#api doc
swagger:
  enabled: true
  title: admin
  description: admin
  web-base-package: com.phenix.admin
  redirect: false


phenix:
  database: phenix_admin
  oauth2:
    common:
      admin-server-addr: https://www.phenix.com/
      api-server-addr: https://www.phenix.com/
      auth-server-addr: https://www.phenix.com/
      user-authorization-uri: ${phenix.common.auth-server-addr}/oauth/authorize
      access-token-uri: ${phenix.common.api-server-addr}/admin/oauth/token
      token-info-uri: ${phenix.common.api-server-addr}/admin/oauth/check_token
      user-info-uri: ${phenix.common.api-server-addr}/admin/current/user
    client:
      admin:
        access-token-uri:  ${phenix.common.access-token-uri}
        client-id: 7gBZcbsC7kLIWCdELIl8nxcs
        client-secret: 0osTIhce7uPvDKHz6aa67bhCukaKoYl4
        login-success-uri: ${phenix.common.admin-server-addr}/login/success
        redirect-uri: ${phenix.common.api-server-addr}/auth/oauth/gitee/callback
        scope: user_info
        user-authorization-uri: https://gitee.com/oauth/authorize
        user-info-uri: https://gitee.com/api/v5/user
      portal:
        client-id: 7gBZcbsC7kLIWCdELIl8nxcs
        client-secret: 0osTIhce7uPvDKHz6aa67bhCukaKoYl4
      gitee:
        access-token-uri: https://gitee.com/oauth/token
        client-id:
        client-secret:
        login-success-uri: ${phenix.oauth2.admin-server-addr}/login/success
        redirect-uri: ${phenix.oauth2.api-server-addr}/auth/oauth/gitee/callback
        scope: user_info
        user-authorization-uri: https://gitee.com/oauth/authorize
        user-info-uri: https://gitee.com/api/v5/user
      qq:
        access-token-uri: https://graph.qq.com/oauth2.0/token
        client-id:
        client-secret:
        login-success-uri: ${phenix.oauth2.admin-server-addr}/login/success
        redirect-uri: ${phenix.oauth2.api-server-addr}/auth/oauth/qq/callback
        scope: get_user_info
        user-authorization-uri: https://graph.qq.com/oauth2.0/authorize
        user-info-uri: https://graph.qq.com/user/get_user_info
      wechat:
        access-token-uri: https://api.weixin.qq.com/sns/oauth2/access_token
        client-id:
        client-secret:
        login-success-uri: ${phenix.oauth2.admin-server-addr}/login/success
        redirect-uri: ${phenix.oauth2.api-server-addr}/auth/oauth/wechat/callback
        scope: snsapi_login
        user-authorization-uri: https://open.weixin.qq.com/connect/qrconnect
        user-info-uri: https://api.weixin.qq.com/sns/userinfo